{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "Virtual_Network",
      "metadata": {
        "description": "VNet name"
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "virtualNetworkExistingRGName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Identifies whether to use new or existing Storage Account"
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "array",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "Virtual Network Address prefix"
      }
    },
    "vnetNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "metadata": {
        "description": "Identifies whether to use new or existing Virtual Network"
      }
    },
    "Subnet1Prefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "Manangement Subnet Prefix"
      }
    },
    "Subnet1Name": {
      "type": "string",
      "defaultValue": "default",
      "metadata": {
        "description": "Management Subnet Name"
      }
    },
    "subnet1StartAddress": {
      "type": "string",
      "metadata": {
        "description": "Manangement Subnet Starting IP Address"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "sdwc-myappliance",
      "metadata": {
        "description": "Name for the Virtual Machine."
      }
    },
    "osDiskSize": {
      "type": "int",
      "defaultValue": 8,
      "metadata": {
        "description": "Virtual Machine OS Disk Size. For scaling multiple sites add additional datastore."
      }
    },
    "newStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Unique Name for Storage Account where the Virtual Machine's disks will be placed."
      }
    },
    "storageAccountType": {
      "type": "string",
      "metadata": {
        "description": "The type of storage account created."
      }
    },
    "storageAccountNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Identifies whether to use new or existing Storage Account"
      }
    },
    "storageAccountExistingRG": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource Group containing existing storage account"
      }
    },
    "MgmtpublicIPAddressName": {
      "type": "string",
      "defaultValue": "MgmtIP",
      "metadata": {
        "description": "Name of the Management Public IP Address"
      }
    },
    "MgmtpublicIPDnsName": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS Prefix for the Public IP used to access the Virtual Machine."
      }
    },
    "MgmtpublicIPNewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Indicates whether the Public IP is new or existing"
      }
    },
    "MgmtpublicIPExistingRGName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource Group containing existing public IP"
      }
    },
    "MgmtpublicIpAllocationMethod": {
      "type": "string",
      "defaultValue": "Dynamic",
      "allowedValues": [
        "Dynamic",
        "Static"
      ],
      "metadata": {
        "description": "Allocation method for the public ip address"
      }
    },
    "MgmtpublicIpSku": {
      "type": "string",
      "defaultValue": "Basic",
      "allowedValues": [
        "Basic",
        "Standard"
      ],
      "metadata": {
        "description": "Name of the resource group for the public ip address"
      }
    },
    "baseUrl": {
      "type": "string",
      "metadata": {
        "artifactsBaseUrl": "",
        "description": "URL to acquire other templates"
      },
      "defaultValue": ""
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the Virtual Machine"
      }
    },
    "imageQualifier": {
      "defaultValue": "-preview",
      "allowedValues": [
        "",
        "-preview"
      ],
      "type": "string",
      "metadata": {
        "description": "Specifies an additional qualifier to use for Marketplace image references. The value 'preview' is for images in staging, while the default value references production images."
      }
    }
  },
  "variables": {
    "imagePublisher": "citrix",
    "imageOffer": "[concat('ctxsdwancenter', parameters('imageQualifier'))]",
    "imageSKU": "citrixsd-wancenter",
    "OSDiskName": "[concat(parameters('vmName'),uniquestring(deployment().name),'-disk')]",
    "vmStorageAccountContainerName": "vhds",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('Subnet1Name'))]",
    "nsgname": "[concat(parameters('vmName'),'-SecurityGroup')]",
    "publicIPAddressType": "Static",
    "storageAccountSetupURL": "[concat(parameters('baseUrl'),'/storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]",
    "MgmtpublicIPSetupURL": "[concat(parameters('baseUrl'),'/mgmtpublicip-',parameters('MgmtpublicIPNewOrExisting'),'.json')]",
    "virtualNetworkSetupURL": "[concat(parameters('baseUrl'),'/vnet-',parameters('vnetNewOrExisting'),'.json')]",
    "osProfile": "[variables(concat('osProfile', 'password'))]",
    "osProfilepassword": {
      "computername": "[parameters('vmName')]",
      "adminUsername": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]"
    }
  },
  "resources": [
    {
      "name": "SettingUpStorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-09-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Location": {
            "value": "[parameters('Location')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          },
          "storageAccountName": {
            "value": "[parameters('newStorageAccountName')]"
          },
          "storageAccountExistingRG": {
            "value": "[parameters('storageAccountExistingRG')]"
          }
        }
      }
    },
    { 
      "apiVersion": "2018-02-01",
      "name": "pid-90bb6a18-3bd2-59c4-bf9a-0662570f0ef3",
      "type": "Microsoft.Resources/deployments",
      "properties": {
          "mode": "Incremental",
          "template": {
              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "resources": []
          }
      }
  },
    {
      "name": "SettingUpMgmtPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-08-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('MgmtpublicIPSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('Location')]"
          },
          "MgmtpublicIPAddressName": {
            "value": "[parameters('MgmtpublicIPAddressName')]"
          },
          "MgmtpublicIPAddressType": {
            "value": "[variables('publicIPAddressType')]"
          },
          "MgmtpublicIPNewOrExisting": {
            "value": "[parameters('MgmtpublicIPNewOrExisting')]"
          },
          "MgmtdnsPrefix": {
            "value": "[parameters('MgmtpublicIPDnsName')]"
          },
          "MgmtpublicIpRGName": {
            "value": "[parameters('MgmtpublicIPExistingRGName')]"
          },
          "MgmtpublicIPAllocationMethod": {
            "value": "[parameters('MgmtpublicIPAllocationMethod')]"
          },
          "MgmtpublicIpSku": {
            "value": "[parameters('MgmtpublicIpSku')]"
          }
        }
      }
    },
    {
      "apiVersion": "2018-07-01",
      "location": "[parameters('Location')]",
      "name": "[concat(parameters('vmName'),'-SecurityGroup')]",
      "properties": {
        "securityRules": [
          {
            "name": "TCP-Rule",
            "properties": {
              "description": "Allow TCP",
              "protocol": "Tcp",
              "sourcePortRange": "22",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "TCP-Rule-1",
            "properties": {
              "description": "Allow TCP",
              "protocol": "Tcp",
              "sourcePortRange": "443",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          },
          {
            "name": "TCP-Rule-2",
            "properties": {
              "description": "Allow TCP",
              "protocol": "Tcp",
              "sourcePortRange": "80",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 103,
              "direction": "Inbound"
            }
          },
            {
              "name": "TCP-Rule-3",
              "properties": {
                "description": "Allow TCP",
                "protocol": "Tcp",
                "sourcePortRange": "2156",
                "destinationPortRange": "2156",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 104,
                "direction": "Outbound"
              }
          }
        ]
      },
      "type": "Microsoft.Network/networkSecurityGroups"
    },
    {
      "name": "SettingUpVirtualNetwork",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-07-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('virtualNetworkSetupURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "location": {
            "value": "[parameters('Location')]"
          },
          "virtualNetworkAddressPrefix": {
            "value": "[parameters('virtualNetworkAddressPrefix')]"
          },
          "Subnet1Name": {
            "value": "[parameters('Subnet1Name')]"
          },
          "Subnet1Prefix": {
            "value": "[parameters('Subnet1Prefix')]"
          },
          "vnetExistingRGName": {
            "value": "[parameters('virtualNetworkExistingRGName')]"
          }
        }
      }
    },
    {
      "apiVersion": "2018-07-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmName'),'-Nic0')]",
      "location": "[parameters('Location')]",
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]",
        "[concat('Microsoft.Network/networkSecurityGroups/',variables('nsgname'))]",
        "[concat('Microsoft.Resources/deployments/','SettingUpMgmtPublicIP')]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('subnet1StartAddress')]",
              "subnet": {
                "id": "[reference('Microsoft.Resources/deployments/SettingUpVirtualNetwork', '2018-07-01').outputs.subnet1Ref.value]",
                "properties": {
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname'))]"
                  }
                }
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('MgmtpublicIPAddressName'))]"
              }
            }
          }
        ],
        "enableIPForwarding": true
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "apiVersion": "2018-06-01",
      "location": "[parameters('Location')]",
      "plan": {
        "name": "[variables('imageSKU')]",
        "publisher": "[variables('imagePublisher')]",
        "product": "[variables('imageOffer')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": "[variables('osProfile')]",
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('OSDiskName')]",
            "vhd": {
              "uri": "[concat(reference(parameters('newStorageAccountName'), '2018-02-01').primaryEndpoints.blob, variables('vmStorageAccountContainerName'), '/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "diskSizeGB": "[parameters('osDiskSize')]"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": true
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'),'-Nic0'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId(parameters('storageAccountExistingRG'), 'Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName')), '2018-02-01').primaryEndpoints.blob]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Resources/deployments/', 'SettingUpStorageAccount')]",
        "[concat('Microsoft.Network/networkInterfaces/',parameters('vmName'),'-Nic0')]"
      ]
    }
  ]
}